#include <iostream>
#include <cmath>
#include <windows.h>

int main()
{
    setlocale(LC_ALL, "Russian"); //подключение русской раскладки
    SetConsoleOutputCP(CP_UTF8);
    int N = 0, i = 0, k = 0, a = 0, b = 0, c = 0, cmax = 0, amin = 0, bsr = 0;
    bool ist = 0, istDOT = 0;
    std::string A1 = "", B1 = "", C1 = ""; //стороны в типе string
    std::cin >> A1 >> B1 >> C1;
    for (i = 0; i < A1.size(); i++) // проверка введеного значения на наличие букв
    {
        if ((A1[i] >= '0') and (A1[i] <= '9') or ((A1[i] == '-') and (i == 0)) or (A1[i] == '.'))
        {
            ist = 0;
            if (A1[i] == '.')
            {
                istDOT = 1; //проверка на наличие точки в введеном значении
            }
        }
        else
            ist = 1; //флаг, показывающий наличие букв, или др. знаков, не относящихся к числам
        if (ist != 0)
        {
            std::cout << "Стороны треугольника должны быть заданы числами, завершение программы";
            exit(0);
        }
    }
    if (istDOT == 1) //проверка флага на наличие точки в введеном значении
    {
        std::cout << "Стороны треугольника должны быть заданы целыи числами, завершение программы";
        exit(0);
    }
    for (i = 0; i < B1.size(); i++) // проверка введеного значения на наличие букв
    {
        if ((B1[i] >= '0') and (B1[i] <= '9') or ((B1[i] == '-') and (i == 0)) or (B1[i] == '.'))
        {
            ist = 0;
            if (B1[i] == '.')
            {
                istDOT = 1; //проверка на наличие точки в введеном значении
            }
        }
        else
            ist = 1; //флаг, показывающий наличие букв, или др. знаков, не относящихся к числам
        if (ist != 0)
        {
            std::cout << "Стороны треугольника должны быть заданы числами, завершение программы";
            exit(0);
        }
    }
    if (istDOT == 1) //проверка флага на наличие точки в введеном значении
    {
        std::cout << "Стороны треугольника должны быть заданы целыи числами, завершение программы";
        exit(0);
    }
    for (i = 0; i < C1.size(); i++) // проверка введеного значения на наличие букв
    {
        if ((C1[i] >= '0') and (C1[i] <= '9') or ((C1[i] == '-') and (i == 0)) or (C1[i] == '.'))
        {
            ist = 0;
            if (C1[i] == '.')
            {
                istDOT = 1; //проверка на наличие точки в введеном значении
            }
        }
        else
            ist = 1; //флаг, показывающий наличие букв, или др. знаков, не относящихся к числам
        if (ist != 0)
        {
            std::cout << "Стороны треугольника должны быть заданы числами, завершение программы";
            exit(0);
        }
    }
    if (istDOT == 1) //проверка флага на наличие точки в введеном значении
    {
        std::cout << "Стороны треугольника должны быть заданы целыи числами, завершение программы";
        exit(0);
    }
    if (A1[0] == '-') //проверка на ниличие минуса перед числом
        k = 1;
    else
        k = 0;
    for (i = k; i < A1.size(); i++) //превращение числа из char в int
    {
        a = int(A1[i]) - '0' + a * 10;
    }
    if (k == 1) //при наличии минуса в типе char, полученное число в int умножается на -1
        a *= -1;
    if (a <= 0) // проверка на положительные стороны треугольника
    {
        std::cout << "Стороны треугольника должны быть заданы положительными числами, завершение программы";
        exit(0);
    }
    if (B1[0] == '-')
        k = 1;
    else
        k = 0;
    for (i = k; i < B1.size(); i++)
    {
        b = int(B1[i]) - '0' + b * 10;
    }
    if (k == 1)
        b *= -1;
    if (b <= 0)
    {
        std::cout << "Стороны треугольника должны быть заданы положительными числами, завершение программы";
        exit(0);
    }
    if (C1[0] == '-')
        k = 1;
    else
        k = 0;
    for (i = k; i < C1.size(); i++)
    {
        c = int(C1[i]) - '0' + c * 10;
    }
    if (k == 1)
        c *= -1;
    if (c <= 0)
    {
        std::cout << "Стороны треугольника должны быть заданы положительными числами, завершение программы";
        exit(0);
    }
    cmax = max(c, max(a, b)); //сторона с максимальной длинной
    amin = min(c, min(a, b)); //сторона с минимальной длинной
    bsr = a + b + c - cmax - amin; //сторона со средней длинной
    if (bsr + amin <= cmax) //проверка на существование треугольника
    {
        std::cout << "Треугольник c такими сторонами получить нельзя, завершение программы";
        exit(0);
    }
    else
        if (pow(cmax, 2) == pow(amin, 2) + pow(bsr, 2)) // проверка на прямоугольный треугольник и.т.д
            std::cout << "Треугольник прямоугольный";
        else
            if (pow(cmax, 2) > pow(amin, 2) + pow(bsr, 2))
                std::cout << "Треугольник тупоугольный";
            else
                if (pow(cmax, 2) < pow(amin, 2) + pow(bsr, 2))
                    std::cout << "Треугольник остроугольный";
    if ((cmax == amin) and (amin == bsr))
        std::cout << " и равносторонний";
    else
        if ((cmax == amin) or (amin == bsr) or (cmax == bsr))
            std::cout << " и равнобедренный";
    return 0;
}